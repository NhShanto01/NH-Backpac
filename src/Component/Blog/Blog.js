import React from 'react';
import './Blog.css';

const Blog = () => {
    return (
        <div>

            <div className='blog'>
                <h1>Q.1 : What is the purpose of Context API</h1>
                <p>
                    Context API হল একটি রিঅ্যাক্ট ফ্রেমওয়ার্ক কম্পোনেন্ট স্ট্রাকচার যা আমাদের অ্যাপ্লিকেশনের সমস্ত স্তরে নির্দিষ্ট ধরনের ডেটা শেয়ার করতে দেয়।
                    এটি প্রপ ড্রিলিংয়ের ( প্রপ ড্রিলিং (যাকে "থ্রেডিং"ও বলা হয়) প্রতিক্রিয়া উপাদান গাছের অংশগুলিতে ডেটা পেতে আপনাকে যে প্রক্রিয়াটির মধ্য দিয়ে যেতে হবে তা বোঝায় ) সমস্যা সমাধানের লক্ষ্যে করা হয়েছে।
                    Context API ডেটা আদান-প্রদানের জন্য সহায়ক যা বিশ্বব্যাপী বলে মনে করা হয়, যেমন বর্তমানে অনুমোদিত ব্যবহারকারী, অ্যাপ্লিকেশনের নির্বাচিত থিম বা পছন্দের ভাষা শেয়ার করতে ব্যবহার করা যেতে পারে ইত্যাদি।
                    যখন আমাদের কাছে এই ধরণের ডেটা থাকে, তখন আমরা অন্য কোনও মডিউল ব্যবহার না করেই প্রসঙ্গ API ব্যবহার করতে পারি।
                    প্রকৃতপক্ষে, আপনি যে কোনও পরিস্থিতিতে প্রসঙ্গ API ব্যবহার করতে পারেন যেখানে আপনাকে একটি উপাদানের মাধ্যমে একটি প্রপ পাঠাতে হবে যেমন এটি গাছের নীচে অন্য একটি উপাদানে পৌঁছায়।
                    আমরা React.createContext() পদ্ধতি ব্যবহার করে একটি প্রসঙ্গ বস্তু তৈরি করে শুরু করি। আবার,এটি একটি ভোক্তা এবং একটি প্রদানকারী ফেরত করে।
                    প্রদানকারী এমন একটি উপাদান যা এটির নাম অনুসারে তার সন্তানদের State প্রদান করে।
                    এটি "Store" ধরে রাখবে এবং সেই Store-এর প্রয়োজন হতে পারে এমন সমস্ত উপাদানের পিতামাতা হবে৷ ভোক্তা যেমন এটি ঘটছে এমন একটি উপাদান যা State কে ব্যবহার করে।
                </p>
            </div>
            <div className='blog'>
                <h1>Q.2 : What is HTML Semantics?</h1>
                <p>
                    Semantic HTML Tag এলিমেন্ট যেমন header, nav, section, article, aside, এবং footer সবকটি Semantic Tag হিসাবে বিবেচিত হয় কারণ তারা উপাদানটির উদ্দেশ্য এবং তাদের ভিতরে থাকা বিষয়বস্তুর ধরন সঠিকভাবে বর্ণনা করে
                    এবং কমবেশি div এলিমেন্টের মত কাজ করে। তারা অন্যান্য উপাদানগুলিকে পৃষ্ঠা বিভাগে একত্রিত করে।
                    তবে যেখানে একটি div ট্যাগে যেকোনো ধরনের তথ্য থাকতে পারে, একটি Semantic ট্যাগের header অঞ্চলে কী ধরনের তথ্য যাবে তা শনাক্ত করা সহজ।
                    আবার,Semantic HTML ট্যাগগুলি সার্চ ইঞ্জিন এবং অন্যান্য ব্যবহারকারী ডিভাইসগুলিকে ওয়েব পৃষ্ঠাগুলির গুরুত্ব এবং প্রসঙ্গ নির্ধারণ করতে সহায়তা করে৷
                    Semantic উপাদান দিয়ে তৈরি পৃষ্ঠাগুলি পড়া অনেক সহজ।
                    এটা বৃহত্তর অ্যাক্সেসিবিলিটি আছে. এটি একটি ভাল ব্যবহারকারীর অভিজ্ঞতা প্রদান করে।
                    Semantic HTML ট্যাগগুলির অন্তর্ভুক্ত -<br />
                    header: একটি ওয়েব পৃষ্ঠার জন্য একটি শিরোনাম সংজ্ঞায়িত করে।<br />
                    nav: এটি নেভিগেশন লিঙ্কের জন্য একটি ধারক সংজ্ঞায়িত করে।<br />
                    Section: এটি একটি ওয়েব পৃষ্ঠার একটি বিভাগকে সংজ্ঞায়িত করে।<br />
                    Article: এই উপাদানটিতে প্রধান অংশ রয়েছে, ওয়েব পৃষ্ঠা সম্পর্কে তথ্য রয়েছে।<br />
                    aside: aside বিষয়বস্তু প্রায়ই একটি নথিতে সাইডবার হিসাবে স্থাপন করা হয়।<br />
                    footer: এটি একটি নথি বা একটি বিভাগের জন্য একটি ফুটার সংজ্ঞায়িত করে।
                </p>
            </div>
        </div>
    );
};

export default Blog;